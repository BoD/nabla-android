plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.apollographql.apollo3'
    id 'maven-publish'
}

group buildConfig.groupId

android {
    namespace = 'com.nabla.sdk.messaging.core'

    compileSdk buildConfig.compileSdk

    defaultConfig {
        minSdk buildConfig.minSdk
        targetSdk buildConfig.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        aarMetadata {
            minCompileSdk buildConfig.compileSdk
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'serialization-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility buildConfig.jvmTarget
        targetCompatibility buildConfig.jvmTarget
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed"
            }
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    // we don't want it for test src, see https://stackoverflow.com/questions/64267076
    if (!it.name.contains("Test")) {
        kotlinOptions.freeCompilerArgs += "-Xexplicit-api=strict"
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
            }
        }
    }
}

apollo {
    packageName.set("com.nabla.sdk.graphql")
    mapScalar("UUID", "com.benasher44.uuid.Uuid", "com.nabla.sdk.core.data.apollo.adapter.uuidAdapter")
    mapScalar("DateTime", "kotlinx.datetime.Instant", "com.apollographql.apollo3.adapter.KotlinxInstantAdapter")
    generateTestBuilders.set(true)
}

dependencies {
    implementation libs.okhttp
    implementation libs.okhttp.logging
    implementation libs.retrofit
    implementation libs.retrofit.kotlin.serialization
    implementation libs.jwtdecode
    implementation libs.kotlin.coroutines.android
    implementation libs.kotlin.serialization.json
    api libs.kotlin.datetime
    implementation libs.apollo.runtime
    implementation libs.apollo.cache
    implementation libs.apollo.cache.sqlite
    implementation libs.apollo.adapters
    implementation libs.androidx.startup
    api libs.uuid

    testImplementation libs.junit
    testImplementation libs.turbine
    testImplementation libs.kotlin.coroutines.test
    testImplementation libs.mockk
    testImplementation libs.apollo.testingSupport
    testImplementation libs.kotlin.test
    testImplementation libs.roboelectric
    testImplementation libs.android.junit
    testImplementation libs.okreplay
}
